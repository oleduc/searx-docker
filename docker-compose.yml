version: '3.7'

services:
  download-template:
    image: alpine/git
    container_name: download-template
    command: -c "
        cd /build/ &&
        ls -la &&
        git clone ${CONFIG_REPO_URL} &&
        mkdir -p filtron/ &&
        mkdir -p nginx/ &&
        mkdir -p nginx/certs &&
        mv ./searx-docker/rules.json /build/filtron/ &&
        envsubst '$${SEARX_HOSTNAME} $${UPSTREAM_PROTOCOL}' < ./searx-docker/nginx-proxy.conf.template > /build/nginx/conf.d/nginx-proxy.conf &&
        cp ${SSL_CERT_PATH} /build/nginx/certs/fullchain.crt &&
        cp ${SSL_KEY_PATH} /build/nginx/certs/private.key &&
        ls -la /build/ &&
        ls -la /build/filtron/
      "
    entrypoint: "ash"
    environment:
      - SEARX_HOSTNAME=${SEARX_HOSTNAME:-localhost}
      - UPSTREAM_PROTOCOL=${UPSTREAM_PROTOCOL:-http}
    volumes:
      - filtron-config:/build/filtron/:rw
      - nginx-config:/build/nginx/:rw
      - .:/git

  nginx:
    container_name: nginx
    image: nginx:1.21.3-alpine
    restart: on-failure
    depends_on:
      - "download-template"
    ports:
      - ${NGINX_HTTP_PORT:-6088}:80
      - ${NGINX_HTTPS_PORT:-3443}:443
    networks:
      - searx
    volumes:
      - nginx-config:/etc/nginx:rw
      
  filtron:
    container_name: filtron
    image: dalf/filtron
    depends_on:
      - "download-template"
    restart: always
    ports:
      - "4040:4040"
      - "4041:4041"
    networks:
      - searx
    command: -listen 0.0.0.0:4040 -api 0.0.0.0:4041 -target searx:8080
    volumes:
      - filtron-config:/etc/filtron/:rw
    read_only: true

  searx:
    container_name: searx
    image: searx/searx:latest
    depends_on:
      - "download-template"
    restart: always
    ports:
      - "8080:8080"
    networks:
      - searx
    command: ${SEARX_COMMAND:-}
    volumes:
      - searx-data:/etc/searx:rw
      - searx-data:/var/log/uwsgi:rw
    environment:
      - BIND_ADDRESS=0.0.0.0:8080
      - BASE_URL=https://${SEARX_HOSTNAME:-localhost}/
      - MORTY_URL=https://${SEARX_HOSTNAME:-localhost}/morty/
      - MORTY_KEY=${MORTY_KEY}

  morty:
    container_name: morty
    image: dalf/morty
    depends_on:
      - "download-template"
    restart: always
    ports:
      - "3000:3000"
    networks:
      - searx
    command: -timeout 6 -ipv6
    environment:
      - MORTY_KEY=${MORTY_KEY}
      - MORTY_ADDRESS=0.0.0.0:3000
    read_only: true

networks:
  searx:
    ipam:
      driver: default

volumes:
  nginx-config:
  nginx-certs:
  filtron-config:
  searx-data:
